<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Targets>
  <Target Name="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\bin\Debug\Mvc2.Extensions.dll">
   <Modules>
    <Module Name="mvc2.extensions.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'Mvc2.Extensions.dll' with a strong name key.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="System.Web.Mvc.Html">
       <Types>
        <Type Name="GroupedSelectExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Collections.Generic.IEnumerable`1&lt;System.Web.Mvc.SelectListItem&gt;&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="26">Consider a design where 'GroupedSelectExtensions.DropDownList(this HtmlHelper, string, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;)' doesn't nest generic type 'IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Collections.Generic.IEnumerable`1&lt;System.Web.Mvc.SelectListItem&gt;&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="36">Consider a design where 'GroupedSelectExtensions.DropDownList(this HtmlHelper, string, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, IDictionary&lt;string, object&gt;)' doesn't nest generic type 'IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Collections.Generic.IEnumerable`1&lt;System.Web.Mvc.SelectListItem&gt;&gt;,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="31">Consider a design where 'GroupedSelectExtensions.DropDownList(this HtmlHelper, string, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, object)' doesn't nest generic type 'IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Collections.Generic.IEnumerable`1&lt;System.Web.Mvc.SelectListItem&gt;&gt;,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="41">Consider a design where 'GroupedSelectExtensions.DropDownList(this HtmlHelper, string, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, string)' doesn't nest generic type 'IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Collections.Generic.IEnumerable`1&lt;System.Web.Mvc.SelectListItem&gt;&gt;,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="51">Consider a design where 'GroupedSelectExtensions.DropDownList(this HtmlHelper, string, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, string, IDictionary&lt;string, object&gt;)' doesn't nest generic type 'IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Collections.Generic.IEnumerable`1&lt;System.Web.Mvc.SelectListItem&gt;&gt;,System.String,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="46">Consider a design where 'GroupedSelectExtensions.DropDownList(this HtmlHelper, string, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, string, object)' doesn't nest generic type 'IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DropDownListFor`2(System.Web.Mvc.HtmlHelper`1&lt;!!0&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.Collections.Generic.IEnumerable`1&lt;System.Web.Mvc.SelectListItem&gt;&gt;,System.Object,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="childExpression" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="63">Parameter 'childExpression' of 'GroupedSelectExtensions.DropDownListFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt;, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, object, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="url" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="63">Parameter 'url' of 'GroupedSelectExtensions.DropDownListFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt;, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, object, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="5#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="63">Change the type of parameter 'url' of method 'GroupedSelectExtensions.DropDownListFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt;, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, object, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, string)' from string to System.Uri, or provide an overload of 'GroupedSelectExtensions.DropDownListFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt;, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, object, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DropDownListFor`2(System.Web.Mvc.HtmlHelper`1&lt;!!0&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;,System.Collections.Generic.IDictionary`2&lt;System.String,System.Collections.Generic.IEnumerable`1&lt;System.Web.Mvc.SelectListItem&gt;&gt;,System.String,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="childExpression" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="69">Parameter 'childExpression' of 'GroupedSelectExtensions.DropDownListFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt;, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, string, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="childOptionLabel" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="69">Parameter 'childOptionLabel' of 'GroupedSelectExtensions.DropDownListFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt;, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, string, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="url" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="69">Parameter 'url' of 'GroupedSelectExtensions.DropDownListFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt;, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, string, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="6#" TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="Breaking">
             <Issue Certainty="60" Level="Error" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="69">Change the type of parameter 'url' of method 'GroupedSelectExtensions.DropDownListFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt;, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, string, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, string, string)' from string to System.Uri, or provide an overload of 'GroupedSelectExtensions.DropDownListFor&lt;TModel, TProperty&gt;(this HtmlHelper&lt;TModel&gt;, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, IDictionary&lt;string, IEnumerable&lt;SelectListItem&gt;&gt;, string, Expression&lt;Func&lt;TModel, TProperty&gt;&gt;, string, string)', that allows 'url' to be passed as a System.Uri object.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSelectData(System.Web.Mvc.HtmlHelper,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="IDictionary" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="127">Correct the spelling of the unrecognized token 'IDictionary' in the literal '"IDictionary&lt;string , IEnumerable&lt;SelectListItem&gt;&gt;"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="137">Correct the spelling of the unrecognized token 'IDictionary' in the literal '"IDictionary&lt;string , IEnumerable&lt;SelectListItem&gt;&gt;"'.</Issue>
            </Message>
            <Message Id="IEnumerable" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="127">Correct the spelling of the unrecognized token 'IEnumerable' in the literal '"IDictionary&lt;string , IEnumerable&lt;SelectListItem&gt;&gt;"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="137">Correct the spelling of the unrecognized token 'IEnumerable' in the literal '"IDictionary&lt;string , IEnumerable&lt;SelectListItem&gt;&gt;"'.</Issue>
            </Message>
            <Message Id="SelectListItem" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="127">Correct the spelling of the unrecognized token 'SelectListItem' in the literal '"IDictionary&lt;string , IEnumerable&lt;SelectListItem&gt;&gt;"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="137">Correct the spelling of the unrecognized token 'SelectListItem' in the literal '"IDictionary&lt;string , IEnumerable&lt;SelectListItem&gt;&gt;"'.</Issue>
            </Message>
            <Message Id="ViewData" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="137">Correct the spelling of the unrecognized token 'ViewData' in the literal '"The ViewData item that has the key \'"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="GroupedSelectExtensions.cs" Line="127">Correct the spelling of the unrecognized token 'ViewData' in the literal '"There is no ViewData item of type \'"'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LabelExtensions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="LabelExtensions.cs" Line="13">Replace method 'LabelExtensions.Label(this HtmlHelper, string, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LabelFor`2(System.Web.Mvc.HtmlHelper`1&lt;!!0&gt;,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;!!0,!!1&gt;&gt;,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="LabelExtensions.cs" Line="26">Replace method 'LabelExtensions.LabelFor&lt;TModel, TValue&gt;(this HtmlHelper&lt;TModel&gt;, Expression&lt;Func&lt;TModel, TValue&gt;&gt;, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="LabelExtensions.cs" Line="39">Replace method 'LabelExtensions.LabelForModel(this HtmlHelper, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LabelHelper(System.Web.Mvc.HtmlHelper,System.Web.Mvc.ModelMetadata,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2012-06-10 10:35:28Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\OneStop\Research\MvcTreeExample\MVC.Extensions.Solution\MVC2.Extensions\Html" File="LabelExtensions.cs" Line="79">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'LabelExtensions.LabelHelper(HtmlHelper, ModelMetadata, string, string, string)' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>Do not nest generic types in member signatures</Name>
   <Description>Avoid API that require users to instantiate a generic type with another generic type as type argument. The syntax gets too complex.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="UriParametersShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1054">
   <Name>URI parameters should not be strings</Name>
   <Description>If a parameter name contains "uri" or "url" or "urn", and it's typed as string, the parameter type should be changed to System.Uri, unless there is an overload method where the same parameter is typed as System.Uri.</Description>
   <Resolution Name="Default">Change the type of parameter {0} of method {1} from string to System.Uri, or provide an overload of {1}, that allows {0} to be passed as a System.Uri object.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182174(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="60">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
